'''
一、python中的运算符：

什么是运算符？

就是计算机语言中用来参与运算的符号！！

1.算数运算符：

符号：+ - * / %(取余,取模) //(取整) **(开方)

2.比较运算符：

特点：比较运算符的最终结果一定是布尔值(True/False)

符号：> >= < <= == !=

理解：对于>=和<=的操作而言，只要满足两者之一，结果都为True

3.混合赋值运算符：

分类：①赋值 ②混合赋值

符号：= += -= *= /= %=

代码如下：

a = 6 #赋值运算，将a赋值为6

b = 4

a += 3 #相当于a = a + 3

print(a)

a += b #相当于a = a + b

print(a)

print(b)

a %= 3 #相当于a = a % 3

print(a)

4.逻辑运算符：

特点：参与运算的内容必须是布尔值，而且结果也是布尔值

符号：and(逻辑与，并且)、or(逻辑或，或者)、not(逻辑非，取反)

a = 6

3<a<9 (3,9) a>3 and a<9

参考模板：

对于and而言：

True and True 结果为：True

True and False 结果为：False

False and True 结果为：False

False and False 结果为：False

总结：逻辑与操作只要有False，结果就为False，一假即假(对False敏感)

对于or而言：

True or True 结果为：True

True or False 结果为：True

False or True 结果为：True

False or False 结果为：False

总结：逻辑或操作只要有True，结果就为True，一真即真(对True敏感)

对于not而言：

not True 结果为：False

not False 结果为：True

总结：取反操作

5.位运算符：(了解)

特点：是运算效率最高的运算符，原因：它在底层直接走的二进制运算

符号：按位与(&)、按位或(|)、按位异或(^) <<(左移) >>(右移)

参考模板：

对于按位与(&)而言：

需求：9 & 5 =?

9：0000 1001

5：0000 0101

结果：0000 0001 1

对于按位或(|)而言：

需求：9 | 5 =?

9：0000 1001

5：0000 0101

结果：0000 1101 13

对于按位异或(^)而言：

需求：9 ^ 5 =?

9：0000 1001

5：0000 0101

结果：0000 1100 12

对于<<(左移)：

需求：9 << 2 =?

9：0000 1001

<<2：00 100100

结果： 00 100100 36

对于>>(右移)：

需求：9 << 2 =?

9：0000 1001

>>2：000000 10

结果： 000000 10 2

6.成员运算符：

作用：判断某个对象在容器中是否存在 结果只能是布尔值

符号：in not in

注意事项：

如果成员运算符使用的容器对象是字典，那么只能判断键是否存在，值是无效的(永远返回False)

7.三元运算符：

格式：表达式1 if 条件表达式 else 表达式2

问题1：什么是表达式？

答：凡是计算可以得出个值的就是表达式(大白话)

问题2：什么是条件表达式？

答：在满足表达式的前提下，结果必须是布尔值

三元运算符的执行过程：

计算机会先执行条件表达式，

如果条件表达式的结果为True，那么就执行表达式1，并且将表达式1的结果作为三元运算的最终结果

如果条件表达式的结果为False，那么就执行表达式2，并且将表达式2的结果作为三元运算的最终结果

补充：三元运算符是python的语法糖之一
'''