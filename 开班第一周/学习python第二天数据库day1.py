'''
day01：

关键字：desc

作用：查看表结构(字段名，数据类型&长度)

举例：

desc python1808_laoguo;

追加数据到表中：(新增操作)

关键字：insert into

格式1：insert into 表名 values(值1,值2,值3...);

格式2: insert into 表名(列名1,列名2,...,列名n) values(值1,值2,...,值n);

注意：

格式1和格式2的区别：null值这块

对于格式1而言：如果某些列没有明确的值给予，那么也需要显示的在values后面传入一个null值

对于格式2而言：如果某些列没有明确的值给予，在表名后明确的定义需要赋值的列，然后给值就可以了，

没有明确定义的默认自动补null值

查询数据(从表中)：(查询操作)

关键字：select

查询表中的所有数据(涉及所有的列)

格式: select * from 表名;

查询表中的所有数据(涉及部分列)

格式：select 列名1,列名2,... from 表名;

查询表中的部分数据(涉及所有的列)

格式：select * from 表名 where ...;

复制表格：(备份操作)

拷贝表格(既要结构，也要数据)

格式：create table 新表名 as select * from 旧表名;

拷贝表格(要结构，要部分数据)

格式：create table 新表名 as select * from 旧表名 where ...;

拷贝表格(只要结构，不要数据)

格式：create table 新表名 as select * from 旧表名 where 0 = 1(永远为false/不成立);

删除表中的数据：(删除操作)

关键字：delete

格式：delete from 表名 where ...;

【注意】：删除操作一般情况下需要配合where子句来执行，否则就会把表中所有的数据全部干掉...

修改表中的数据：(修改操作)

关键字：update

格式：update 表名 set 列名1 = 值1,列名2 = 值2,...,where ...;

【注意】：修改操作一般情况下需要配合where子句来执行，否则就会把表中所有行的相关列的数据全部修改...

思考：做算数运算(譬如：8 + 4)

切入点：

1).最终得到一个计算结构返回(查询得到) --> select

2).引入伪表的概念

什么是伪表？

关键字：dual

概念：并不真实存在，可以认为它是一张虚表，作用只是用来给我们程序员模拟计算数据的

分析完毕最终代码实现如下：

select 8 + 4 from dual;
'''